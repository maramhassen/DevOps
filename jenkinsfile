pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/maramhassen/DevOps.git'
            }
        }

        stage('Maven Clean') {
            steps {
                sh 'mvn clean'
            }
        }

        stage('Maven Compile') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                echo 'üîç Analyse SonarQube en cours...'
                script {
                    try {
                        sh """
                            mvn -B sonar:sonar \
                            -Dsonar.projectKey=mon-projet \
                            -Dsonar.host.url=http://192.16.33.10:9000 \
                            -Dsonar.login=${SONARQUBE_TOKEN} \
                            -DskipTests=true
                        """
                    } catch (err) {
                        echo "‚ö†Ô∏è SonarQube Analysis √©chou√©e : ${err}"
                        // Le pipeline continue malgr√© l‚Äô√©chec de SonarQube
                    }
                }
            }
        }

        stage('Build .jar') {
            steps {
                echo 'Maven package -> g√©n√©ration du .jar'
                sh 'mvn -B package -DskipTests'
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build termin√© avec succ√®s !'
            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
        }
        failure {
            echo '‚ùå √âchec du pipeline.'
        }
    }
}